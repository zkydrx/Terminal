<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AzureCodeExpiry" xml:space="preserve">
    <value>This code will expire in 15 minutes.</value>
  </data>
  <data name="AzureEnterTenant" xml:space="preserve">
    <value>Please enter the desired tenant number.</value>
  </data>
  <data name="AzureNewLogin" xml:space="default">
    <value>Enter %s to login with a different account</value>
  </data>
  <data name="AzureRemoveStored" xml:space="default">
    <value>Enter %s to remove the above saved connection settings.</value>
  </data>
  <data name="AzureInvalidAccessInput" xml:space="default">
    <value>Please enter a valid number to access the stored connection settings, %s to make a new one, or %s to remove the stored ones.</value>
  </data>
  <data name="AzureNonNumberError" xml:space="preserve">
    <value>Please enter a number.</value>
  </data>
  <data name="AzureNumOutOfBoundsError" xml:space="preserve">
    <value>Number out of bounds. Please enter a valid number.</value>
  </data>
  <data name="AzureNoTenants" xml:space="preserve">
    <value>Could not find any tenants.</value>
  </data>
  <data name="AzureNoCloudAccount" xml:space="preserve">
    <value>You have not set up your cloud shell account yet. Please go to https://shell.azure.com to set it up.</value>
  </data>
  <data name="AzureStorePrompt" xml:space="default">
    <value>Do you want to save these connection settings for future logins? [%s/%s]</value>
  </data>
  <data name="AzureInvalidStoreInput" xml:space="default">
    <value>Please enter %s or %s</value>
  </data>
  <data name="AzureRequestingCloud" xml:space="preserve">
    <value>Requesting a cloud shell instance...</value>
  </data>
  <data name="AzureSuccess" xml:space="preserve">
    <value>Succeeded.</value>
  </data>
  <data name="AzureRequestingTerminal" xml:space="preserve">
    <value>Requesting a terminal (this might take a while)...</value>
  </data>
  <data name="AzureTokensStored" xml:space="preserve">
    <value>Your connection settings have been saved for future logins.</value>
  </data>
  <data name="AzureNoTokens" xml:space="preserve">
    <value>No tokens to remove.</value>
  </data>
  <data name="AzureTokensRemoved" xml:space="preserve">
    <value>Saved connection settings removed.</value>
  </data>
  <data name="AzureExitStr" xml:space="preserve">
    <value>Exit.</value>
  </data>
  <data name="AzureAuthString" xml:space="preserve">
    <value>Authenticated.</value>
  </data>
  <data name="AzureInternetOrServerIssue" xml:space="preserve">
    <value>Could not connect to Azure. You may not have internet or the server might be down.</value>
  </data>
  <data name="AzureOldCredentialsFlushedMessage" xml:space="preserve">
    <value>Authentication parameters changed. You'll need to log in again.</value>
  </data>
  <data name="AzureUnknownTenantName" xml:space="preserve">
    <value>&lt;unknown tenant name&gt;</value>
  </data>
  <data name="AzureIthTenant" xml:space="default">
    <value>Tenant %s: %s (%s)</value>
  </data>
  <data name="AzureSuccessfullyAuthenticated" xml:space="preserve">
    <value>Authenticated.</value>
  </data>
  <data name="AzureUserEntry_NewLogin" xml:space="preserve">
    <value>n</value>
    <comment>The user must enter this character to say NEW LOGIN (AzureInvalidAccessInput, AzureNewLogin)</comment>
  </data>
  <data name="AzureUserEntry_RemoveStored" xml:space="preserve">
    <value>r</value>
    <comment>The user must enter this character to say REMOVE SAVED LOGINS (AzureRemoveStored, AzureInvalidAccessInput)</comment>
  </data>
  <data name="AzureUserEntry_Yes" xml:space="preserve">
    <value>y</value>
    <comment>The user must enter this character to signify YES</comment>
  </data>
  <data name="AzureUserEntry_No" xml:space="preserve">
    <value>n</value>
    <comment>The user must enter this character to signify NO</comment>
  </data>
  <data name="ProcessExited" xml:space="preserve">
    <value>[process exited with code %u]</value>
    <comment>The first argument (%u) is the (positive) error code of the process. 0 is success.</comment>
  </data>
  <data name="ProcessFailedToLaunch" xml:space="preserve">
    <value>[error 0x%8.08x when launching `%ls']</value>
    <comment>The first argument is the hexadecimal error code. The second is the process name.
If this resource spans multiple lines, it will not be displayed properly. Yeah.</comment>
  </data>
  <data name="TelnetInternetOrServerIssue" xml:space="preserve">
    <value>Could not connect to telnet server.</value>
  </data>
</root>
